class LazyVideoLoader extends HTMLElement{constructor(){super(),this.attachShadow({mode:"open"}),this.video=document.createElement("video"),this.errorText=document.createElement("p"),this.video.preload="none",this.video.muted=!0,this.videoLoading=!1,this.sources=[],this.errorText.innerText="⚠️",this.shadowRoot.append(this.video);const t=new CSSStyleSheet;t.replaceSync("\n @keyframes spin {\n 0% { transform: rotate(0deg); }\n 100% { transform: rotate(360deg); }\n }\n\n :host {\n display: flex;\n position: relative;\n width: auto;\n height: auto;\n justify-content: center;\n align-items: center;\n overflow: hidden;\n }\n\n video {\n width: 100%;\n heigth: 100%;\n }\n "),this.shadowRoot.adoptedStyleSheets=[t],this.mutationObserver=new MutationObserver((()=>this.updateVideoSources())),this.failedSources=0,this.totalSources=0}connectedCallback(){let t=this.getAttribute("width"),e=this.getAttribute("height"),i=this.getAttribute("loop"),s=this.getAttribute("controls"),o=this.getAttribute("playsinline"),h=this.getAttribute("margin")||0,n=this.getAttribute("manual");null===n?n=!1:""===n||"true"===n?n=!0:"false"===n&&(n=!1),null===i?this.video.loop=!1:""===i||"true"===i?this.video.loop=!0:"false"===i&&(this.video.loop=!1),null===s?this.video.controls=!1:""===s||"true"===s?this.video.controls=!0:"false"===s&&(this.video.controls=!1),null===o?this.video.playsInline=!1:""===o||"true"===o?this.video.playsInline=!0:"false"===o&&(this.video.playsInline=!1),this.hasAttribute("width")!=(null==this.hasAttribute("height"))&&(null==t?(this.video.height=e,this.video.width="auto"):(this.video.width=t,this.video.height="auto"));let r=!1;e||t||(r=!0);const d=h;d<0&&(d=0);const a=this.offsetHeight*d+"px 0px";this.observer=new IntersectionObserver((t=>{t.forEach((t=>{t.isIntersecting&&(this.videoLoading||n||(this.showThumbnail(),this.video.autoplay=!0,this.load()))}))}),{rootMargin:a}),this.observer.observe(this),this.mutationObserver.observe(this,{childList:!0}),this.video.addEventListener("loadedmetadata",(()=>{r&&(this.video.width=this.video.videoWidth,this.video.height=this.video.videoHeight),this.showThumbnail()})),this.video.addEventListener("seeked",this.captureFirstFrame.bind(this)),this.video.addEventListener("error",(()=>{}))}disconnectedCallback(){this.mutationObserver.disconnect(),this.video.pause(),this.observer.disconnect()}async captureFirstFrame(){if(null==this.getAttribute("poster")&&this.video.readyState>=2){let t=document.createElement("canvas");t.width=this.video.videoWidth,t.height=this.video.videoHeight,t.getContext("2d").drawImage(this.video,0,0,t.width,t.height),this.video.poster=t.toDataURL()}}updateVideoSources(){Array.from(this.querySelectorAll("source")).forEach((t=>{this.totalSources++,t.setAttribute("src",`${t.getAttribute("src")}?cache-bust=${(new Date).getTime()}`);const e=t.cloneNode(!0);e.addEventListener("error",(()=>{this.failedSources++,this.failedSources===this.totalSources&&this.video.dispatchEvent(new Event("error"))})),this.video.appendChild(e),this.sources.push(e),t.remove()}))}play(){this.video.play()}pause(){this.video.pause()}load(){this.failedSources=0,this.videoLoading=!0,this.video.load()}showThumbnail(){null!=this.getAttribute("poster")&&this.video.setAttribute("poster",this.getAttribute("poster"))}}customElements.define("lazy-video-loader",LazyVideoLoader);